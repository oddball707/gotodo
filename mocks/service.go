// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

import todo_proto "gotodo/proto"

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// Create provides a mock function with given fields: sc
func (_m *Service) Create(sc *todo_proto.Task) (*todo_proto.Task, error) {
	ret := _m.Called(sc)

	var r0 *todo_proto.Task
	if rf, ok := ret.Get(0).(func(*todo_proto.Task) *todo_proto.Task); ok {
		r0 = rf(sc)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*todo_proto.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*todo_proto.Task) error); ok {
		r1 = rf(sc)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: sc
func (_m *Service) Delete(sc *todo_proto.Task) error {
	ret := _m.Called(sc)

	var r0 error
	if rf, ok := ret.Get(0).(func(*todo_proto.Task) error); ok {
		r0 = rf(sc)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields:
func (_m *Service) Get() ([]*todo_proto.Task, error) {
	ret := _m.Called()

	var r0 []*todo_proto.Task
	if rf, ok := ret.Get(0).(func() []*todo_proto.Task); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*todo_proto.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
